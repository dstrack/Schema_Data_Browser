/*
Copyright 2020 Dirk Strack, Strack Software Development

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

declare 
	v_count NUMBER;
	v_stat VARCHAR2(32767);
begin
	SELECT COUNT(*) INTO v_count
	FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'DATA_BROWSER_REPORT_PREFS_SEQ';
	if v_count = 0 then 
		v_stat := q'[
		CREATE SEQUENCE DATA_BROWSER_REPORT_PREFS_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
	SELECT COUNT(*) INTO v_count
	FROM USER_TABLES WHERE TABLE_NAME = 'DATA_BROWSER_REPORT_PREFS';
	if v_count = 0 then 
		v_stat := q'[
		CREATE TABLE DATA_BROWSER_REPORT_PREFS (	
			ID NUMBER NOT NULL, 
			NAME VARCHAR2(128 CHAR) NOT NULL, -- DBR_DEFAULT, DBR_ALTERNATIVE
			DESCRIPTION VARCHAR2(512), 
			CREATED_AT TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT LOCALTIMESTAMP NOT NULL, 
			CREATED_BY VARCHAR2(32) DEFAULT NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'), SYS_CONTEXT('USERENV','SESSION_USER')) NOT NULL, 
			LAST_MODIFIED_AT TIMESTAMP (6) WITH LOCAL TIME ZONE DEFAULT LOCALTIMESTAMP NOT NULL, 
			LAST_MODIFIED_BY VARCHAR2(32) DEFAULT NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'), SYS_CONTEXT('USERENV','SESSION_USER')) NOT NULL, 
			VIEW_MODE VARCHAR2(128 CHAR), 
			REPORT_MODE VARCHAR2(1) DEFAULT 'Y' NOT NULL, 
			TABLE_NAME VARCHAR2(128 CHAR) NOT NULL, 
			IS_PRIMARY VARCHAR2(1) DEFAULT 'Y' NOT NULL, 
			IS_ALTERNATIVE VARCHAR2(1) DEFAULT 'N' NOT NULL, 
			IS_PUBLIC VARCHAR2(1) DEFAULT 'Y' NOT NULL, 
			UNIQUE_KEY_COLUMN VARCHAR2(128 CHAR), 
			ORDER_BY VARCHAR2(4000 CHAR), 
			ORDER_DIRECTION VARCHAR2(4000 CHAR), 
			JOIN_OPTIONS VARCHAR2(4000 CHAR), 
			ROWS_PER_PAGE NUMBER(10,0) DEFAULT 50 NOT NULL, 
			SELECT_COLUMNS VARCHAR2(4000 CHAR), 
			CONTROL_BREAK VARCHAR2(4000 CHAR), 
			USE_NESTED_LINKS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
			CALC_SUBTOTALS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
			 CONSTRAINT DATA_BROWSER_REPORT_PREFS_PK PRIMARY KEY (ID)  USING INDEX , 
			 CONSTRAINT DATA_BROWSER_REP_PREF_RMODE_CK CHECK (REPORT_MODE IN ('Y', 'N')), 
			 CONSTRAINT DATA_BROWSER_REP_PREF_PRIRY_CK CHECK (IS_PRIMARY IN ('Y', 'N')), 
			 CONSTRAINT DATA_BROWSER_REP_PREF_ALTER_CK CHECK (IS_ALTERNATIVE IN ('Y', 'N')), 
			 CONSTRAINT DATA_BROWSER_REP_PREF_PULIC_CK CHECK (IS_PUBLIC IN ('Y', 'N')), 
			 CONSTRAINT DATA_BROWSER_REP_PREF_DESC_UN UNIQUE (TABLE_NAME, NAME)  USING INDEX 
		)
		]';
		EXECUTE IMMEDIATE v_Stat;
		v_stat := q'[
		CREATE OR REPLACE TRIGGER DATA_BROWSER_REPORT_PREF_BI_TR 
		BEFORE INSERT ON DATA_BROWSER_REPORT_PREFS FOR EACH ROW 
		BEGIN 
			if :new.ID is null then 
				SELECT DATA_BROWSER_REPORT_PREFS_SEQ.NEXTVAL INTO :new.ID FROM DUAL;
			end if; 
			:new.CREATED_BY := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'), SYS_CONTEXT('USERENV','SESSION_USER'));
			:new.CREATED_AT := LOCALTIMESTAMP;
			:new.LAST_MODIFIED_BY := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'), SYS_CONTEXT('USERENV','SESSION_USER'));
			:new.LAST_MODIFIED_AT := LOCALTIMESTAMP;
		END;
		]';
		EXECUTE IMMEDIATE v_Stat;
		v_stat := q'[
		CREATE OR REPLACE TRIGGER DATA_BROWSER_REPORT_PREF_BU_TR 
		BEFORE UPDATE ON DATA_BROWSER_REPORT_PREFS FOR EACH ROW
		BEGIN
				:new.LAST_MODIFIED_BY := NVL(SYS_CONTEXT('APEX$SESSION','APP_USER'), SYS_CONTEXT('USERENV','SESSION_USER'));
				:new.LAST_MODIFIED_AT := LOCALTIMESTAMP;
		END;
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;

	SELECT COUNT(*) INTO v_count
	FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'DATA_BROWSER_REPORT_FILTER_SEQ';
	if v_count = 0 then 
		v_stat := q'[
		CREATE SEQUENCE DATA_BROWSER_REPORT_FILTER_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
	SELECT COUNT(*) INTO v_count
	FROM USER_TABLES WHERE TABLE_NAME = 'DATA_BROWSER_REPORT_FILTER';
	if v_count = 0 then 
		v_stat := q'[
		CREATE TABLE DATA_BROWSER_REPORT_FILTER (
			ID NUMBER NOT NULL ENABLE, 
			DATA_BROWSER_REPORT_PREFS_ID NUMBER NOT NULL ENABLE, 
			FIELD VARCHAR2(512) NOT NULL ENABLE, 
			LINE_NO NUMBER(10,0), 
			ACTIVE VARCHAR2(1) DEFAULT 'Y' NOT NULL ENABLE, 
			OPERATOR VARCHAR2(128 CHAR) NOT NULL ENABLE, 
			EXPRESSION VARCHAR2(4000 CHAR), 
			LOV_VALUE VARCHAR2(4000 CHAR), 
			 CONSTRAINT DATA_BROWSER_REP_FILT_ACTIV_CK CHECK (ACTIVE IN ('Y', 'N')) ENABLE, 
			 CONSTRAINT DATA_BROWSER_REP_FILT_PK PRIMARY KEY (ID) USING INDEX  ENABLE, 
			 CONSTRAINT DATA_BROWSER_REP_FILT_DESC_UN UNIQUE (DATA_BROWSER_REPORT_PREFS_ID, FIELD) USING INDEX  ENABLE, 
			 CONSTRAINT DATA_BROWSER_REP_FILT_REP_FK FOREIGN KEY (DATA_BROWSER_REPORT_PREFS_ID)
			  REFERENCES DATA_BROWSER_REPORT_PREFS (ID) ON DELETE CASCADE ENABLE
		)
		]';
		EXECUTE IMMEDIATE v_Stat;
		v_stat := q'[
		CREATE OR REPLACE TRIGGER DATA_BROWSER_REPORT_FILT_BI_TR 
		BEFORE INSERT ON DATA_BROWSER_REPORT_FILTER FOR EACH ROW 
		BEGIN 
			if :new.ID is null then 
				SELECT DATA_BROWSER_REPORT_FILTER_SEQ.NEXTVAL INTO :new.ID FROM DUAL;
			end if; 
		END;
		]';
		EXECUTE IMMEDIATE v_Stat;
	end if;
end;
/
show errors

declare 
	v_count NUMBER;
	v_stat VARCHAR2(32767);
begin
	SELECT COUNT(*) INTO v_Count
	from user_tab_cols where table_name = 'DATA_BROWSER_REPORT_FILTER' and column_name = 'LOV_VALUE';
	if v_Count = 0 then
		EXECUTE IMMEDIATE 'ALTER TABLE DATA_BROWSER_REPORT_FILTER ADD (
			LOV_VALUE VARCHAR2(4000 CHAR)
		)';
	end if;
end;
/
